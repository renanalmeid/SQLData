Hacker News is a popular website run by Y Combinator. It’s widely known by people in the tech industry as a community site for sharing news, showing off projects, asking questions, among other things.

In this project, you will be working with a table named hacker_news that contains stories from Hacker News since its launch in 2007. It has the following columns:

title: the title of the story
user: the user who submitted the story
score: the score of the story
timestamp: the time of the story
url: the link of the story


-- ########## Moderating 

--1) Feeling of the table
SELECT title, score
FROM hacker_news
ORDER BY score DESC
LIMIT 5;

--2)Recent studies have found that online forums tend to be dominated by a small percentage of their users (1-9-90 Rule)

SELECT SUM(score)
FROM hacker_news;

--3) Next, we need to pinpoint the users who have accumulated a lot of points across their stories. Find the individual users who have gotten combined scores of more than 200, and their combined scores.

SELECT user, SUM(score)
FROM hacker_news
GROUP BY user
HAVING SUM(score)> 200
ORDER BY 2 DESC;

--5) How many times has each offending user posted this link?

SELECT user,
   COUNT(*)
FROM hacker_news
WHERE url LIKE '%watch?v=dQw4w9WgXcQ%'
GROUP BY user
ORDER BY COUNT(*) DESC;

-- ######### Which sites feed Hacker News?

--6)Hacker News stories are essentially links that take users to other websites. Which of these sites feed Hacker News the most: GitHub, Medium, or New York Times
SELECT CASE
   WHEN url LIKE '%github.com%' THEN 'GitHub'
   WHEN url LIKE '%medium.com%' THEN 'Medium'
   WHEN url LIKE '%nytimes.com%' THEN 'New York Times'
   ELSE 'Other'
  END AS 'Source'
FROM hacker_news;

--7) Next, build on the previous query: Add a column for the number of stories from each URL using COUNT(). Also, GROUP BY the CASE statement.

SELECT CASE
   WHEN url LIKE '%github.com%' THEN 'GitHub'
   WHEN url LIKE '%medium.com%' THEN 'Medium'
   WHEN url LIKE '%nytimes.com%' THEN 'New York Times'
   ELSE 'Other'
  END AS 'Source',
  COUNT(*)
FROM hacker_news
GROUP BY 1;


-- #### Whats the best time to post a story?

--8) Every submitter wants their story to get a high score so that the story makes it to the front page, but… What’s the best time of the day to post a story on Hacker News?
SELECT timestamp
FROM hacker_news
LIMIT 10;

--9) SQLite comes with a strftime() function - a very powerful function that allows you to return a formatted date. It takes two arguments: strftime(format, column)

SELECT timestamp,
   strftime('%H', timestamp)
FROM hacker_news
GROUP BY 1
LIMIT 20;

This returns the hour, HH, of the timestamp column!

For strftime(__, timestamp):

%Y returns the year (YYYY)
%m returns the month (01-12)
%d returns the day of the month (1-31)
%H returns 24-hour clock (00-23)
%M returns the minute (00-59)
%S returns the seconds (00-59)
if timestamp format is YYYY-MM-DD HH:MM:SS.


--10) Okay, now we understand how strftime() works. Let’s write a query that returns three columns:
--The hours of the timestamp
--The average score for each hour
--The count of stories for each hour

SELECT strftime('%H', timestamp), AVG(score), COUNT(*)
FROM hacker_news
GROUP BY 1
ORDER BY 1;

--11) Round the average scores (ROUND()).  Rename the columns to make it more readable (AS). Add a WHERE clause to filter out the NULL values in timestamp.

SELECT strftime('%H', timestamp) AS 'Hour', 
   ROUND(AVG(score), 1) AS 'Average Score', 
   COUNT(*) AS 'Number of Stories'
FROM hacker_news
WHERE timestamp IS NOT NULL
GROUP BY 1
ORDER BY 1;


