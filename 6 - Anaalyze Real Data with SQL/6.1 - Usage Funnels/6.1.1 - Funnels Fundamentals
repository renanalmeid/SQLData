####### Part 1
We want to build a funnel to analyze if certain questions prompted users to stop working on the survey.


Let’s build our first basic funnel!

Count the number of distinct user_id who answered each question_text.

You can do this by using a simple GROUP BY command.
SELECT question_text, COUNT(DISTINCT user_id)
FROM survey_responses
GROUP BY 1;

####### Part 2 - Survey Result
We could use SQL to calculate the percent change between each question, 
but it’s just as easy to analyze these manually with a calculator or in a spreadsheet program like Microsoft Excel or Google Sheets.


###### Part 3 - Compare Funnels For A/B Tests

Mattresses and More has an onboarding workflow for new users of their website. It uses modal pop-ups to welcome users and show them important features of the site like:

Welcome to Mattresses and More!
Browse our bedding selection
Select items to add to your cart
View your cart by clicking on the icon
Press ‘Buy Now!’ when you’re ready to checkout
The Product team at Mattresses and More has created a new design for the pop-ups that they believe will lead more users to complete the workflow.

They’ve set up an A/B test where:

50% of users view the original control version of the pop-ups
50% of users view the new variant version of the pop-ups
Eventually, we’ll want to answer the question:

How is the funnel different between the two groups?

We will be using a table called onboarding_modals with the following columns:

user_id - the user identifier
modal_text - the modal step
user_action - the user response (Close Modal or Continue)
ab_group - the version (control or variant)



-----

Using GROUP BY, count the number of distinct user_id‘s for each value of modal_text. This will tell us the number of users completing each step of the funnel.

This time, sort modal_text so that your funnel is in order

SELECT modal_text, COUNT(DISTINCT user_id)
FROM onboarding_modals
GROUP BY 1
ORDER BY 1;

-- We can use a CASE statement within our COUNT() aggregate so that we only count user_ids whose ab_group is equal to ‘control’:

SELECT modal_text,
  COUNT(DISTINCT CASE
    WHEN ab_group = 'control' THEN user_id
    END) AS 'control_clicks',
  COUNT(DISTINCT CASE
    WHEN ab_group = 'variant' THEN user_id
    END) AS 'variant_clicks'
FROM onboarding_modals
GROUP BY 1
ORDER BY 1;